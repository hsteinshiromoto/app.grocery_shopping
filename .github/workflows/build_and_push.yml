name: Build and Push

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - feature/*
      - bugfix/*
      - main

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: app.grocery_shopping

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          else
            make build
          fi

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          if [ "$VERSION" == "main" ]; then
            IMAGE_ID=ghcr.io/${{ github.repository }}/$IMAGE_NAME

            # Change all uppercase to lowercase
            IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

            # Strip "v" prefix from tag name
            [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

            # Use Docker `latest` tag convention
            [ "$VERSION" == "main" ] && VERSION=latest

            echo IMAGE_ID=$IMAGE_ID
            echo VERSION=$VERSION

            docker tag ${{ github.actor }}/$IMAGE_NAME $IMAGE_ID:$VERSION
            docker push $IMAGE_ID:$VERSION
          fi
            echo "Skipping push step, because this branch is ${VERSION}."
            
